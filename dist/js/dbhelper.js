class DBHelper{static get DATABASE_URL(){return"http://localhost:1337"}static fetchRestaurants(e){getFromRestaurantOS().then(t=>{console.log("promise resolvee",t),e(null,t)}).catch(t=>{console.log("promise reject",t),fetch(`${DBHelper.DATABASE_URL}/restaurants`).then(e=>e.json()).then(t=>{addToRestaurantOS(t),e(null,t),console.log("fetched")}).catch(t=>{e(`Request failed. Returned status of ${t}`,null)})})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((l,s)=>{if(l)t(l,null);else{const l=s.find(t=>t.id==e);l?t(null,l):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((l,s)=>{if(l)t(l,null);else{const l=s.filter(t=>t.cuisine_type==e);t(null,l)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((l,s)=>{if(l)t(l,null);else{const l=s.filter(t=>t.neighborhood==e);t(null,l)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,l){DBHelper.fetchRestaurants((s,a)=>{if(s)l(s,null);else{let s=a;"all"!=e&&(s=s.filter(t=>t.cuisine_type==e)),"all"!=t&&(s=s.filter(e=>e.neighborhood==t)),l(null,s)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,l)=>{if(t)e(t,null);else{const t=l.map((e,t)=>l[t].neighborhood),s=t.filter((e,l)=>t.indexOf(e)==l);e(null,s)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,l)=>{if(t)e(t,null);else{const t=l.map((e,t)=>l[t].cuisine_type),s=t.filter((e,l)=>t.indexOf(e)==l);e(null,s)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return 10===e.id?"/dist/img/10.jpg":`/dist/img/${e.photograph}.jpg`}static mapMarkerForRestaurant(e,t){const l=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return l.addTo(newMap),l}}